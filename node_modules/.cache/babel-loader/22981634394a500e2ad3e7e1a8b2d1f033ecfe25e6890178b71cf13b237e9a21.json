{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\chat_bot\\\\src\\\\components\\\\ChatBotUI\\\\ChatBotUI.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatBotUI.css';\nimport botIcon from '../../assets/bot_icon.gif';\nimport SmartHelpBar from './SmartHelpBar';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HEADER_CYCLE_TEXTS = ['Instant help.', 'Smarter workflows.', 'Just Ask Aura.'];\nconst GENIE_ANIMATION_DURATION = 700; // ms\n\nconst WELCOME_MESSAGE = `👋 Hi, I'm Aura, your AI assistant to help with any query!\\nYou can select a specific issue from the options above ☝️\\nor simply type your question below to get started.`;\nconst ChatBotUI = ({\n  open,\n  onClose\n}) => {\n  _s();\n  const [headerIndex, setHeaderIndex] = useState(0);\n  const [headerFade, setHeaderFade] = useState(true);\n  const [genieState, setGenieState] = useState('closed');\n  const closeTimeoutRef = useRef(null);\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [showWelcome, setShowWelcome] = useState(true);\n\n  // Cycle header texts\n  useEffect(() => {\n    if (!open) return;\n    const interval = setInterval(() => {\n      setHeaderFade(false);\n      setTimeout(() => {\n        setHeaderIndex(prev => (prev + 1) % HEADER_CYCLE_TEXTS.length);\n        setHeaderFade(true);\n      }, 350);\n    }, 1800);\n    return () => clearInterval(interval);\n  }, [open]);\n\n  // Prevent scroll on body when open\n  useEffect(() => {\n    if (open) document.body.style.overflow = 'hidden';else document.body.style.overflow = '';\n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, [open]);\n\n  // Genie animation state logic\n  useEffect(() => {\n    if (open) {\n      setGenieState('opening');\n      const timer = setTimeout(() => setGenieState('open'), GENIE_ANIMATION_DURATION);\n      return () => clearTimeout(timer);\n    } else if (!open && genieState !== 'closed') {\n      setGenieState('closing');\n      closeTimeoutRef.current = setTimeout(() => setGenieState('closed'), GENIE_ANIMATION_DURATION);\n      return () => {\n        if (closeTimeoutRef.current) clearTimeout(closeTimeoutRef.current);\n      };\n    }\n  }, [open]);\n\n  // Custom close handler to play animation before calling parent's onClose\n  const handleClose = () => {\n    setGenieState('closing');\n    closeTimeoutRef.current = setTimeout(() => {\n      setGenieState('closed');\n      onClose();\n    }, GENIE_ANIMATION_DURATION);\n  };\n  const handleHelpOptionSelect = message => {\n    setShowWelcome(false);\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: message\n    }]);\n    setMessages(prev => [...prev, {\n      type: 'bot',\n      content: 'I\\'m processing your request...'\n    }]);\n  };\n  const handleSend = async () => {\n    if (inputValue.trim()) {\n      setShowWelcome(false);\n      const userMessage = inputValue.trim();\n      // Add user message\n      setMessages(prev => [...prev, {\n        type: 'user',\n        content: userMessage,\n        isNew: true\n      }]);\n      // Add loading bot message (empty content)\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: '',\n        isLoading: true,\n        isNew: true\n      }]);\n      setInputValue('');\n      try {\n        const response = await fetch('http://localhost:8000/chat/stream', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: \"demo_user\",\n            client_id: 3866,\n            message: userMessage\n          })\n        });\n        if (!response.body) throw new Error('No response body');\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder();\n        let done = false;\n        let fullText = '';\n        while (!done) {\n          const {\n            value,\n            done: doneReading\n          } = await reader.read();\n          done = doneReading;\n          if (value) {\n            const chunk = decoder.decode(value, {\n              stream: true\n            });\n            fullText += chunk;\n            setMessages(prev => {\n              const newMessages = [...prev];\n              // Update the last bot message\n              const lastIdx = newMessages.length - 1;\n              if (newMessages[lastIdx].type === 'bot') {\n                newMessages[lastIdx] = {\n                  ...newMessages[lastIdx],\n                  content: fullText,\n                  isLoading: !done\n                };\n              }\n              return newMessages;\n            });\n          }\n        }\n        // Ensure loading is turned off after stream ends\n        setMessages(prev => {\n          const newMessages = [...prev];\n          const lastIdx = newMessages.length - 1;\n          if (newMessages[lastIdx].type === 'bot') {\n            newMessages[lastIdx] = {\n              ...newMessages[lastIdx],\n              isLoading: false\n            };\n          }\n          return newMessages;\n        });\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setMessages(prev => {\n          const newMessages = [...prev];\n          const lastIdx = newMessages.length - 1;\n          if (newMessages[lastIdx].type === 'bot') {\n            newMessages[lastIdx] = {\n              ...newMessages[lastIdx],\n              content: 'Sorry, I encountered an error. Please try again.',\n              isLoading: false\n            };\n          }\n          return newMessages;\n        });\n      }\n    }\n  };\n\n  // If closed, don't render the window at all\n  let genieClass = 'genie-anim';\n  if (genieState === 'opening') genieClass += ' genie-open';else if (genieState === 'open') genieClass += ' genie-open';else if (genieState === 'closing') genieClass += ' genie-close';\n  if (genieState === 'closed') return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-ui-backdrop${open ? ' open' : ''}`,\n    onClick: handleClose,\n    tabIndex: -1,\n    style: {\n      pointerEvents: open ? 'auto' : 'none',\n      zIndex: open ? 4000 : -1 // Higher than bubble\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-ui-window ${genieClass}`,\n      onClick: e => e.stopPropagation(),\n      tabIndex: 0,\n      style: {\n        pointerEvents: open ? 'auto' : 'none',\n        zIndex: open ? 4001 : -1 // Higher than bubble\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-ui-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: botIcon,\n          alt: \"Bot\",\n          style: {\n            width: 36,\n            height: 36,\n            borderRadius: '50%',\n            marginRight: 10,\n            background: 'rgba(255,255,255,0.18)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chatbot-ui-title\",\n          children: \"5C Aura AI Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `chatbot-ui-header-cycle${headerFade ? ' fade-in' : ' fade-out'}`,\n          children: HEADER_CYCLE_TEXTS[headerIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-ui-close\",\n          onClick: handleClose,\n          \"aria-label\": \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmartHelpBar, {\n        onOptionSelect: handleHelpOptionSelect,\n        isUserTyping: inputValue.length > 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-ui-messages\",\n        children: [showWelcome && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-welcome-msg fade-float-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-ai-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: botIcon,\n              alt: \"AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-ai-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-title\",\n              children: \"\\uD83D\\uDC4B Hi, I'm Aura\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-desc\",\n              children: [\"Your AI assistant to help with any query.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"welcome-highlight\",\n                children: \"Select an option above or type your question below to get started.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          type: msg.type,\n          content: msg.content,\n          isLoading: msg.isLoading,\n          isNew: msg.isNew,\n          onLoadComplete: () => {\n            if (msg.type === 'bot' && msg.isLoading) {\n              setMessages(prev => {\n                const newMessages = [...prev];\n                newMessages[index] = {\n                  ...msg,\n                  isLoading: false\n                };\n                return newMessages;\n              });\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-ui-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"chatbot-ui-input\",\n          placeholder: \"Type your message...\",\n          value: inputValue,\n          ref: inputRef,\n          onChange: e => {\n            if (e.target.value.length <= 1000) setInputValue(e.target.value);\n            if (inputRef.current) {\n              inputRef.current.style.height = 'auto';\n              inputRef.current.style.height = Math.min(inputRef.current.scrollHeight, 120) + 'px';\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSend();\n            }\n          },\n          maxLength: 3000,\n          rows: 1,\n          style: {\n            resize: 'none',\n            minHeight: '36px',\n            maxHeight: '120px',\n            overflowY: 'auto',\n            width: '100%',\n            fontFamily: 'inherit',\n            fontSize: '0.97rem',\n            color: 'hsl(219, 36%, 36%)',\n            background: 'transparent',\n            border: 'none',\n            outline: 'none',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-ui-send\",\n          onClick: handleSend,\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBotUI, \"PKNPeps5nFgwr2a+1RZhSysrpIE=\");\n_c = ChatBotUI;\nexport default ChatBotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatBotUI\");","map":{"version":3,"names":["React","useState","useEffect","useRef","botIcon","SmartHelpBar","ChatMessage","jsxDEV","_jsxDEV","HEADER_CYCLE_TEXTS","GENIE_ANIMATION_DURATION","WELCOME_MESSAGE","ChatBotUI","open","onClose","_s","headerIndex","setHeaderIndex","headerFade","setHeaderFade","genieState","setGenieState","closeTimeoutRef","inputValue","setInputValue","inputRef","messages","setMessages","showWelcome","setShowWelcome","interval","setInterval","setTimeout","prev","length","clearInterval","document","body","style","overflow","timer","clearTimeout","current","handleClose","handleHelpOptionSelect","message","type","content","handleSend","trim","userMessage","isNew","isLoading","response","fetch","method","headers","JSON","stringify","user_id","client_id","Error","reader","getReader","decoder","TextDecoder","done","fullText","value","doneReading","read","chunk","decode","stream","newMessages","lastIdx","error","console","genieClass","className","onClick","tabIndex","pointerEvents","zIndex","children","e","stopPropagation","src","alt","width","height","borderRadius","marginRight","background","fileName","_jsxFileName","lineNumber","columnNumber","onOptionSelect","isUserTyping","map","msg","index","onLoadComplete","placeholder","ref","onChange","target","Math","min","scrollHeight","onKeyDown","key","shiftKey","preventDefault","maxLength","rows","resize","minHeight","maxHeight","overflowY","fontFamily","fontSize","color","border","outline","boxSizing","_c","$RefreshReg$"],"sources":["C:/Projects/chat_bot/src/components/ChatBotUI/ChatBotUI.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ChatBotUI.css';\r\nimport botIcon from '../../assets/bot_icon.gif';\r\nimport SmartHelpBar from './SmartHelpBar';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nconst HEADER_CYCLE_TEXTS = [\r\n  'Instant help.',\r\n  'Smarter workflows.',\r\n  'Just Ask Aura.'\r\n];\r\n\r\nconst GENIE_ANIMATION_DURATION = 700; // ms\r\n\r\nconst WELCOME_MESSAGE = `👋 Hi, I'm Aura, your AI assistant to help with any query!\\nYou can select a specific issue from the options above ☝️\\nor simply type your question below to get started.`;\r\n\r\ninterface Message {\r\n  type: 'user' | 'bot';\r\n  content: string;\r\n  isLoading?: boolean;\r\n  isNew?: boolean;\r\n}\r\n\r\nconst ChatBotUI: React.FC<{\r\n  open: boolean;\r\n  onClose: () => void;\r\n}> = ({ open, onClose }) => {\r\n  const [headerIndex, setHeaderIndex] = useState(0);\r\n  const [headerFade, setHeaderFade] = useState(true);\r\n  const [genieState, setGenieState] = useState<'closed' | 'opening' | 'open' | 'closing'>('closed');\r\n  const closeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const inputRef = useRef<HTMLTextAreaElement>(null);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [showWelcome, setShowWelcome] = useState(true);\r\n\r\n  // Cycle header texts\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    const interval = setInterval(() => {\r\n      setHeaderFade(false);\r\n      setTimeout(() => {\r\n        setHeaderIndex((prev) => (prev + 1) % HEADER_CYCLE_TEXTS.length);\r\n        setHeaderFade(true);\r\n      }, 350);\r\n    }, 1800);\r\n    return () => clearInterval(interval);\r\n  }, [open]);\r\n\r\n  // Prevent scroll on body when open\r\n  useEffect(() => {\r\n    if (open) document.body.style.overflow = 'hidden';\r\n    else document.body.style.overflow = '';\r\n    return () => { document.body.style.overflow = ''; };\r\n  }, [open]);\r\n\r\n  // Genie animation state logic\r\n  useEffect(() => {\r\n    if (open) {\r\n      setGenieState('opening');\r\n      const timer = setTimeout(() => setGenieState('open'), GENIE_ANIMATION_DURATION);\r\n      return () => clearTimeout(timer);\r\n    } else if (!open && genieState !== 'closed') {\r\n      setGenieState('closing');\r\n      closeTimeoutRef.current = setTimeout(() => setGenieState('closed'), GENIE_ANIMATION_DURATION);\r\n      return () => {\r\n        if (closeTimeoutRef.current) clearTimeout(closeTimeoutRef.current);\r\n      };\r\n    }\r\n  }, [open]);\r\n\r\n  // Custom close handler to play animation before calling parent's onClose\r\n  const handleClose = () => {\r\n    setGenieState('closing');\r\n    closeTimeoutRef.current = setTimeout(() => {\r\n      setGenieState('closed');\r\n      onClose();\r\n    }, GENIE_ANIMATION_DURATION);\r\n  };\r\n\r\n  const handleHelpOptionSelect = (message: string) => {\r\n    setShowWelcome(false);\r\n    setMessages(prev => [...prev, { type: 'user', content: message }]);\r\n    setMessages(prev => [...prev, { type: 'bot', content: 'I\\'m processing your request...' }]);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (inputValue.trim()) {\r\n      setShowWelcome(false);\r\n      const userMessage = inputValue.trim();\r\n      // Add user message\r\n      setMessages(prev => [...prev, { \r\n        type: 'user', \r\n        content: userMessage,\r\n        isNew: true\r\n      }]);\r\n      // Add loading bot message (empty content)\r\n      setMessages(prev => [...prev, { \r\n        type: 'bot', \r\n        content: '',\r\n        isLoading: true,\r\n        isNew: true\r\n      }]);\r\n      setInputValue('');\r\n      try {\r\n        const response = await fetch('http://localhost:8000/chat/stream', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            user_id: \"demo_user\",\r\n            client_id: 3866,\r\n            message: userMessage\r\n          })\r\n        });\r\n        if (!response.body) throw new Error('No response body');\r\n        const reader = response.body.getReader();\r\n        const decoder = new TextDecoder();\r\n        let done = false;\r\n        let fullText = '';\r\n        while (!done) {\r\n          const { value, done: doneReading } = await reader.read();\r\n          done = doneReading;\r\n          if (value) {\r\n            const chunk = decoder.decode(value, { stream: true });\r\n            fullText += chunk;\r\n            setMessages(prev => {\r\n              const newMessages = [...prev];\r\n              // Update the last bot message\r\n              const lastIdx = newMessages.length - 1;\r\n              if (newMessages[lastIdx].type === 'bot') {\r\n                newMessages[lastIdx] = {\r\n                  ...newMessages[lastIdx],\r\n                  content: fullText,\r\n                  isLoading: !done\r\n                };\r\n              }\r\n              return newMessages;\r\n            });\r\n          }\r\n        }\r\n        // Ensure loading is turned off after stream ends\r\n        setMessages(prev => {\r\n          const newMessages = [...prev];\r\n          const lastIdx = newMessages.length - 1;\r\n          if (newMessages[lastIdx].type === 'bot') {\r\n            newMessages[lastIdx] = {\r\n              ...newMessages[lastIdx],\r\n              isLoading: false\r\n            };\r\n          }\r\n          return newMessages;\r\n        });\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n        setMessages(prev => {\r\n          const newMessages = [...prev];\r\n          const lastIdx = newMessages.length - 1;\r\n          if (newMessages[lastIdx].type === 'bot') {\r\n            newMessages[lastIdx] = {\r\n              ...newMessages[lastIdx],\r\n              content: 'Sorry, I encountered an error. Please try again.',\r\n              isLoading: false\r\n            };\r\n          }\r\n          return newMessages;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // If closed, don't render the window at all\r\n  let genieClass = 'genie-anim';\r\n  if (genieState === 'opening') genieClass += ' genie-open';\r\n  else if (genieState === 'open') genieClass += ' genie-open';\r\n  else if (genieState === 'closing') genieClass += ' genie-close';\r\n  if (genieState === 'closed') return null;\r\n\r\n  return (\r\n    <div \r\n      className={`chatbot-ui-backdrop${open ? ' open' : ''}`}\r\n      onClick={handleClose}\r\n      tabIndex={-1}\r\n      style={{ \r\n        pointerEvents: open ? 'auto' : 'none',\r\n        zIndex: open ? 4000 : -1 // Higher than bubble\r\n      }}\r\n    >\r\n      <div\r\n        className={`chatbot-ui-window ${genieClass}`}\r\n        onClick={e => e.stopPropagation()}\r\n        tabIndex={0}\r\n        style={{\r\n          pointerEvents: open ? 'auto' : 'none',\r\n          zIndex: open ? 4001 : -1 // Higher than bubble\r\n        }}\r\n      >\r\n        <div className=\"chatbot-ui-header\">\r\n          <img src={botIcon} alt=\"Bot\" style={{ width: 36, height: 36, borderRadius: '50%', marginRight: 10, background: 'rgba(255,255,255,0.18)' }} />\r\n          <span className=\"chatbot-ui-title\">5C Aura AI Chatbot</span>\r\n          <span className={`chatbot-ui-header-cycle${headerFade ? ' fade-in' : ' fade-out'}`}>{HEADER_CYCLE_TEXTS[headerIndex]}</span>\r\n          <button className=\"chatbot-ui-close\" onClick={handleClose} aria-label=\"Close\">×</button>\r\n        </div>\r\n        \r\n        <SmartHelpBar \r\n          onOptionSelect={handleHelpOptionSelect}\r\n          isUserTyping={inputValue.length > 0}\r\n        />\r\n\r\n        <div className=\"chatbot-ui-messages\">\r\n          {showWelcome && (\r\n            <div className=\"chatbot-welcome-msg fade-float-in\">\r\n              <div className=\"welcome-ai-icon\">\r\n                <img src={botIcon} alt=\"AI Assistant\" />\r\n              </div>\r\n              <div className=\"welcome-ai-text\">\r\n                <div className=\"welcome-title\">👋 Hi, I'm Aura</div>\r\n                <div className=\"welcome-desc\">\r\n                  Your AI assistant to help with any query.<br/>\r\n                  <span className=\"welcome-highlight\">Select an option above or type your question below to get started.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {messages.map((msg, index) => (\r\n            <ChatMessage\r\n              key={index}\r\n              type={msg.type}\r\n              content={msg.content}\r\n              isLoading={msg.isLoading}\r\n              isNew={msg.isNew}\r\n              onLoadComplete={() => {\r\n                if (msg.type === 'bot' && msg.isLoading) {\r\n                  setMessages(prev => {\r\n                    const newMessages = [...prev];\r\n                    newMessages[index] = { ...msg, isLoading: false };\r\n                    return newMessages;\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"chatbot-ui-input-row\">\r\n          <textarea\r\n            className=\"chatbot-ui-input\"\r\n            placeholder=\"Type your message...\"\r\n            value={inputValue}\r\n            ref={inputRef}\r\n            onChange={e => {\r\n              if (e.target.value.length <= 1000) setInputValue(e.target.value);\r\n              if (inputRef.current) {\r\n                inputRef.current.style.height = 'auto';\r\n                inputRef.current.style.height = Math.min(inputRef.current.scrollHeight, 120) + 'px';\r\n              }\r\n            }}\r\n            onKeyDown={e => {\r\n              if (e.key === 'Enter' && !e.shiftKey) {\r\n                e.preventDefault();\r\n                handleSend();\r\n              }\r\n            }}\r\n            maxLength={3000}\r\n            rows={1}\r\n            style={{\r\n              resize: 'none',\r\n              minHeight: '36px',\r\n              maxHeight: '120px',\r\n              overflowY: 'auto',\r\n              width: '100%',\r\n              fontFamily: 'inherit',\r\n              fontSize: '0.97rem',\r\n              color: 'hsl(219, 36%, 36%)',\r\n              background: 'transparent',\r\n              border: 'none',\r\n              outline: 'none',\r\n              boxSizing: 'border-box',\r\n            }}\r\n          />\r\n          <button \r\n            className=\"chatbot-ui-send\"\r\n            onClick={handleSend}\r\n          >\r\n            ➤\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBotUI; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}