{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\chat_bot\\\\src\\\\components\\\\ChatBubble\\\\ChatBubble.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ChatBubble.css';\nimport botIcon from '../../assets/bot_icon.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUBBLE_SIZE = 80;\nconst RING_SIZE = 96;\nconst PLASMA_BLOBS = 5;\nconst PLASMA_COLORS = ['rgba(0,255,255,0.25)', 'rgba(162,89,255,0.22)', 'rgba(255,0,255,0.18)', 'rgba(0,255,247,0.18)', 'rgba(255,97,246,0.15)'];\nfunction lerp(a, b, t) {\n  return a + (b - a) * t;\n}\nconst ChatBubble = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const neonRingRef = useRef(null);\n  const containerRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [pointer, setPointer] = useState(null);\n\n  // Animate floating plasma blobs\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    // Each blob has its own phase and speed\n    const phases = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => Math.random() * 1000);\n    const speeds = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 0.7 + Math.random() * 0.7);\n    const radii = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 16 + Math.random() * 12);\n    const draw = () => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\n        // Center of the blob floats in a circle, but is attracted to pointer if close\n        let cx = BUBBLE_SIZE / 2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\n        let cy = BUBBLE_SIZE / 2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\n        if (pointer && containerRef.current) {\n          // Get pointer relative to bubble center\n          const rect = containerRef.current.getBoundingClientRect();\n          const px = pointer.x - rect.left;\n          const py = pointer.y - rect.top;\n          // If pointer is inside bubble, attract blob center toward pointer\n          const dx = px - BUBBLE_SIZE / 2;\n          const dy = py - BUBBLE_SIZE / 2;\n          const dist = Math.sqrt(dx * dx + dy * dy);\n          if (dist < BUBBLE_SIZE / 1.2) {\n            cx = lerp(cx, px, 0.22);\n            cy = lerp(cy, py, 0.22);\n          }\n        }\n        // Animate organic radius\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\n        // Draw organic plasma blob\n        ctx.save();\n        ctx.globalAlpha = 0.7;\n        ctx.beginPath();\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI / 24) {\n          // Organic edge\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\n          const x = cx + Math.cos(a) * edge;\n          const y = cy + Math.sin(a) * edge;\n          if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowBlur = 16;\n        ctx.fill();\n        ctx.restore();\n      }\n      t += 0.018;\n      animationId = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => cancelAnimationFrame(animationId);\n  }, [pointer]);\n\n  // Neon plasma ring animation\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    const drawRing = () => {\n      const canvas = neonRingRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(RING_SIZE / 2, RING_SIZE / 2);\n      ctx.beginPath();\n      const baseR = 40;\n      let pointerAngle = null;\n      let pointerDist = null;\n      if (pointer && containerRef.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        const px = pointer.x - rect.left - RING_SIZE / 2;\n        const py = pointer.y - rect.top - RING_SIZE / 2;\n        pointerDist = Math.sqrt(px * px + py * py);\n        pointerAngle = Math.atan2(py, px);\n      }\n      for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI / 64) {\n        // Neon ring base\n        let r = baseR + Math.sin(a * 6 + t * 2) * 2 + Math.cos(a * 3 + t * 1.2) * 1.5;\n        // If pointer is near, bulge the ring toward the pointer\n        if (pointerAngle !== null && pointerDist !== null && pointerDist < 80) {\n          const diff = Math.abs(a - pointerAngle);\n          if (diff < 0.7) {\n            r += (1 - diff / 0.7) * (18 - pointerDist / 6) * Math.sin(t * 2.5);\n          }\n        }\n        const x = Math.cos(a) * r;\n        const y = Math.sin(a) * r;\n        if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.shadowColor = '#00fff7';\n      ctx.shadowBlur = 16;\n      ctx.strokeStyle = 'rgba(0,255,255,0.85)';\n      ctx.lineWidth = 3.2;\n      ctx.globalAlpha = 0.85;\n      ctx.stroke();\n      ctx.restore();\n      t += 0.018;\n      animationId = requestAnimationFrame(drawRing);\n    };\n    drawRing();\n    return () => cancelAnimationFrame(animationId);\n  }, [pointer]);\n\n  // Mouse move tracking for pointer attraction\n  useEffect(() => {\n    const handleMove = e => {\n      setPointer({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    const handleLeave = () => setPointer(null);\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseout', handleLeave);\n    return () => {\n      window.removeEventListener('mousemove', handleMove);\n      window.removeEventListener('mouseout', handleLeave);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bubble-container\",\n    ref: containerRef,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-bubble\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: neonRingRef,\n        width: RING_SIZE,\n        height: RING_SIZE,\n        className: \"plasma-neon-ring-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plasma-orb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-core\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-glow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-trail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: BUBBLE_SIZE,\n          height: BUBBLE_SIZE,\n          className: \"plasma-blobs-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), isHovered && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: botIcon,\n          alt: \"AI Bot\",\n          className: \"bot-gif-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBubble, \"anBDfJYuhqTc4pF0jwGo43gyvmE=\");\n_c = ChatBubble;\nexport default ChatBubble;\nvar _c;\n$RefreshReg$(_c, \"ChatBubble\");","map":{"version":3,"names":["React","useEffect","useRef","useState","botIcon","jsxDEV","_jsxDEV","BUBBLE_SIZE","RING_SIZE","PLASMA_BLOBS","PLASMA_COLORS","lerp","a","b","t","ChatBubble","_s","canvasRef","neonRingRef","containerRef","isHovered","setIsHovered","pointer","setPointer","animationId","phases","Array","from","length","_","i","Math","random","speeds","radii","draw","canvas","current","ctx","getContext","clearRect","width","height","cx","sin","cos","cy","rect","getBoundingClientRect","px","x","left","py","y","top","dx","dy","dist","sqrt","r","save","globalAlpha","beginPath","PI","edge","moveTo","lineTo","closePath","fillStyle","shadowColor","shadowBlur","fill","restore","requestAnimationFrame","cancelAnimationFrame","drawRing","translate","baseR","pointerAngle","pointerDist","atan2","diff","abs","strokeStyle","lineWidth","stroke","handleMove","e","clientX","clientY","handleLeave","window","addEventListener","removeEventListener","className","ref","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Projects/chat_bot/src/components/ChatBubble/ChatBubble.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatBubble.css';\r\nimport botIcon from '../../assets/bot_icon.gif';\r\n\r\nconst BUBBLE_SIZE = 80;\r\nconst RING_SIZE = 96;\r\nconst PLASMA_BLOBS = 5;\r\nconst PLASMA_COLORS = [\r\n  'rgba(0,255,255,0.25)',\r\n  'rgba(162,89,255,0.22)',\r\n  'rgba(255,0,255,0.18)',\r\n  'rgba(0,255,247,0.18)',\r\n  'rgba(255,97,246,0.15)'\r\n];\r\n\r\nfunction lerp(a: number, b: number, t: number) {\r\n  return a + (b - a) * t;\r\n}\r\n\r\nconst ChatBubble: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const neonRingRef = useRef<HTMLCanvasElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [pointer, setPointer] = useState<{x: number, y: number} | null>(null);\r\n\r\n  // Animate floating plasma blobs\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    // Each blob has its own phase and speed\r\n    const phases = Array.from({length: PLASMA_BLOBS}, (_, i) => Math.random() * 1000);\r\n    const speeds = Array.from({length: PLASMA_BLOBS}, (_, i) => 0.7 + Math.random() * 0.7);\r\n    const radii = Array.from({length: PLASMA_BLOBS}, (_, i) => 16 + Math.random() * 12);\r\n    const draw = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\r\n        // Center of the blob floats in a circle, but is attracted to pointer if close\r\n        let cx = BUBBLE_SIZE/2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\r\n        let cy = BUBBLE_SIZE/2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\r\n        if (pointer && containerRef.current) {\r\n          // Get pointer relative to bubble center\r\n          const rect = containerRef.current.getBoundingClientRect();\r\n          const px = pointer.x - rect.left;\r\n          const py = pointer.y - rect.top;\r\n          // If pointer is inside bubble, attract blob center toward pointer\r\n          const dx = px - BUBBLE_SIZE/2;\r\n          const dy = py - BUBBLE_SIZE/2;\r\n          const dist = Math.sqrt(dx*dx + dy*dy);\r\n          if (dist < BUBBLE_SIZE/1.2) {\r\n            cx = lerp(cx, px, 0.22);\r\n            cy = lerp(cy, py, 0.22);\r\n          }\r\n        }\r\n        // Animate organic radius\r\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\r\n        // Draw organic plasma blob\r\n        ctx.save();\r\n        ctx.globalAlpha = 0.7;\r\n        ctx.beginPath();\r\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI/24) {\r\n          // Organic edge\r\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\r\n          const x = cx + Math.cos(a) * edge;\r\n          const y = cy + Math.sin(a) * edge;\r\n          if (a === 0) ctx.moveTo(x, y);\r\n          else ctx.lineTo(x, y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowBlur = 16;\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(draw);\r\n    };\r\n    draw();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, [pointer]);\r\n\r\n  // Neon plasma ring animation\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    const drawRing = () => {\r\n      const canvas = neonRingRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.save();\r\n      ctx.translate(RING_SIZE/2, RING_SIZE/2);\r\n      ctx.beginPath();\r\n      const baseR = 40;\r\n      let pointerAngle = null;\r\n      let pointerDist = null;\r\n      if (pointer && containerRef.current) {\r\n        const rect = containerRef.current.getBoundingClientRect();\r\n        const px = pointer.x - rect.left - RING_SIZE/2;\r\n        const py = pointer.y - rect.top - RING_SIZE/2;\r\n        pointerDist = Math.sqrt(px*px + py*py);\r\n        pointerAngle = Math.atan2(py, px);\r\n      }\r\n      for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI/64) {\r\n        // Neon ring base\r\n        let r = baseR + Math.sin(a * 6 + t * 2) * 2 + Math.cos(a * 3 + t * 1.2) * 1.5;\r\n        // If pointer is near, bulge the ring toward the pointer\r\n        if (pointerAngle !== null && pointerDist !== null && pointerDist < 80) {\r\n          const diff = Math.abs(a - pointerAngle);\r\n          if (diff < 0.7) {\r\n            r += (1 - diff/0.7) * (18 - pointerDist/6) * Math.sin(t * 2.5);\r\n          }\r\n        }\r\n        const x = Math.cos(a) * r;\r\n        const y = Math.sin(a) * r;\r\n        if (a === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.shadowColor = '#00fff7';\r\n      ctx.shadowBlur = 16;\r\n      ctx.strokeStyle = 'rgba(0,255,255,0.85)';\r\n      ctx.lineWidth = 3.2;\r\n      ctx.globalAlpha = 0.85;\r\n      ctx.stroke();\r\n      ctx.restore();\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(drawRing);\r\n    };\r\n    drawRing();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, [pointer]);\r\n\r\n  // Mouse move tracking for pointer attraction\r\n  useEffect(() => {\r\n    const handleMove = (e: MouseEvent) => {\r\n      setPointer({ x: e.clientX, y: e.clientY });\r\n    };\r\n    const handleLeave = () => setPointer(null);\r\n    window.addEventListener('mousemove', handleMove);\r\n    window.addEventListener('mouseout', handleLeave);\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMove);\r\n      window.removeEventListener('mouseout', handleLeave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"chat-bubble-container\"\r\n      ref={containerRef}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <div className=\"chat-bubble\">\r\n        {/* Neon plasma ring canvas */}\r\n        <canvas\r\n          ref={neonRingRef}\r\n          width={RING_SIZE}\r\n          height={RING_SIZE}\r\n          className=\"plasma-neon-ring-canvas\"\r\n        />\r\n        {/* CSS-based plasma orb */}\r\n        <div className=\"plasma-orb\">\r\n          <div className=\"plasma-core\"></div>\r\n          <div className=\"plasma-glow\"></div>\r\n          <div className=\"plasma-trail\"></div>\r\n          {/* Canvas for floating plasma blobs */}\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={BUBBLE_SIZE}\r\n            height={BUBBLE_SIZE}\r\n            className=\"plasma-blobs-canvas\"\r\n          />\r\n          {/* On hover, show the GIF covering the orb */}\r\n          {isHovered && (\r\n            <img src={botIcon} alt=\"AI Bot\" className=\"bot-gif-full\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBubble; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,kBAAkB;AACzB,OAAOC,OAAO,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,YAAY,GAAG,CAAC;AACtB,MAAMC,aAAa,GAAG,CACpB,sBAAsB,EACtB,uBAAuB,EACvB,sBAAsB,EACtB,sBAAsB,EACtB,uBAAuB,CACxB;AAED,SAASC,IAAIA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAE;EAC7C,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAC,IAAIE,CAAC;AACxB;AAEA,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,SAAS,GAAGf,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMgB,WAAW,GAAGhB,MAAM,CAAoB,IAAI,CAAC;EACnD,MAAMiB,YAAY,GAAGjB,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAgC,IAAI,CAAC;;EAE3E;EACAF,SAAS,CAAC,MAAM;IACd,IAAIuB,WAAmB;IACvB,IAAIV,CAAC,GAAG,CAAC;IACT;IACA,MAAMW,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAEnB;IAAY,CAAC,EAAE,CAACoB,CAAC,EAAEC,CAAC,KAAKC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;IACjF,MAAMC,MAAM,GAAGP,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAEnB;IAAY,CAAC,EAAE,CAACoB,CAAC,EAAEC,CAAC,KAAK,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACtF,MAAME,KAAK,GAAGR,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAEnB;IAAY,CAAC,EAAE,CAACoB,CAAC,EAAEC,CAAC,KAAK,EAAE,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IACnF,MAAMG,IAAI,GAAGA,CAAA,KAAM;MACjB,MAAMC,MAAM,GAAGnB,SAAS,CAACoB,OAAO;MAChC,IAAI,CAACD,MAAM,EAAE;MACb,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACnC,IAAI,CAACD,GAAG,EAAE;MACVA,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;MAChD,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,YAAY,EAAEqB,CAAC,EAAE,EAAE;QACrC;QACA,IAAIa,EAAE,GAAGpC,WAAW,GAAC,CAAC,GAAGwB,IAAI,CAACa,GAAG,CAAC9B,CAAC,GAAGmB,MAAM,CAACH,CAAC,CAAC,GAAGL,MAAM,CAACK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGC,IAAI,CAACc,GAAG,CAAC/B,CAAC,GAAG,GAAG,GAAGgB,CAAC,CAAC,GAAG,CAAC;QAC7F,IAAIgB,EAAE,GAAGvC,WAAW,GAAC,CAAC,GAAGwB,IAAI,CAACc,GAAG,CAAC/B,CAAC,GAAGmB,MAAM,CAACH,CAAC,CAAC,GAAGL,MAAM,CAACK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGC,IAAI,CAACa,GAAG,CAAC9B,CAAC,GAAG,GAAG,GAAGgB,CAAC,CAAC,GAAG,CAAC;QAC7F,IAAIR,OAAO,IAAIH,YAAY,CAACkB,OAAO,EAAE;UACnC;UACA,MAAMU,IAAI,GAAG5B,YAAY,CAACkB,OAAO,CAACW,qBAAqB,CAAC,CAAC;UACzD,MAAMC,EAAE,GAAG3B,OAAO,CAAC4B,CAAC,GAAGH,IAAI,CAACI,IAAI;UAChC,MAAMC,EAAE,GAAG9B,OAAO,CAAC+B,CAAC,GAAGN,IAAI,CAACO,GAAG;UAC/B;UACA,MAAMC,EAAE,GAAGN,EAAE,GAAG1C,WAAW,GAAC,CAAC;UAC7B,MAAMiD,EAAE,GAAGJ,EAAE,GAAG7C,WAAW,GAAC,CAAC;UAC7B,MAAMkD,IAAI,GAAG1B,IAAI,CAAC2B,IAAI,CAACH,EAAE,GAACA,EAAE,GAAGC,EAAE,GAACA,EAAE,CAAC;UACrC,IAAIC,IAAI,GAAGlD,WAAW,GAAC,GAAG,EAAE;YAC1BoC,EAAE,GAAGhC,IAAI,CAACgC,EAAE,EAAEM,EAAE,EAAE,IAAI,CAAC;YACvBH,EAAE,GAAGnC,IAAI,CAACmC,EAAE,EAAEM,EAAE,EAAE,IAAI,CAAC;UACzB;QACF;QACA;QACA,MAAMO,CAAC,GAAGzB,KAAK,CAACJ,CAAC,CAAC,GAAGC,IAAI,CAACa,GAAG,CAAC9B,CAAC,GAAG,GAAG,GAAGgB,CAAC,CAAC,GAAG,CAAC,GAAGC,IAAI,CAACc,GAAG,CAAC/B,CAAC,GAAG,GAAG,GAAGgB,CAAC,CAAC,GAAG,CAAC;QAC1E;QACAQ,GAAG,CAACsB,IAAI,CAAC,CAAC;QACVtB,GAAG,CAACuB,WAAW,GAAG,GAAG;QACrBvB,GAAG,CAACwB,SAAS,CAAC,CAAC;QACf,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAImB,IAAI,CAACgC,EAAE,GAAG,CAAC,GAAG,GAAG,EAAEnD,CAAC,IAAImB,IAAI,CAACgC,EAAE,GAAC,EAAE,EAAE;UACvD;UACA,MAAMC,IAAI,GAAGL,CAAC,GAAG5B,IAAI,CAACa,GAAG,CAAChC,CAAC,GAAG,CAAC,GAAGE,CAAC,GAAG,GAAG,GAAGgB,CAAC,CAAC,GAAG,CAAC,GAAGC,IAAI,CAACc,GAAG,CAACjC,CAAC,GAAG,GAAG,GAAGE,CAAC,GAAG,GAAG,GAAGgB,CAAC,CAAC,GAAG,CAAC;UACxF,MAAMoB,CAAC,GAAGP,EAAE,GAAGZ,IAAI,CAACc,GAAG,CAACjC,CAAC,CAAC,GAAGoD,IAAI;UACjC,MAAMX,CAAC,GAAGP,EAAE,GAAGf,IAAI,CAACa,GAAG,CAAChC,CAAC,CAAC,GAAGoD,IAAI;UACjC,IAAIpD,CAAC,KAAK,CAAC,EAAE0B,GAAG,CAAC2B,MAAM,CAACf,CAAC,EAAEG,CAAC,CAAC,CAAC,KACzBf,GAAG,CAAC4B,MAAM,CAAChB,CAAC,EAAEG,CAAC,CAAC;QACvB;QACAf,GAAG,CAAC6B,SAAS,CAAC,CAAC;QACf7B,GAAG,CAAC8B,SAAS,GAAG1D,aAAa,CAACoB,CAAC,GAAGpB,aAAa,CAACkB,MAAM,CAAC;QACvDU,GAAG,CAAC+B,WAAW,GAAG3D,aAAa,CAACoB,CAAC,GAAGpB,aAAa,CAACkB,MAAM,CAAC;QACzDU,GAAG,CAACgC,UAAU,GAAG,EAAE;QACnBhC,GAAG,CAACiC,IAAI,CAAC,CAAC;QACVjC,GAAG,CAACkC,OAAO,CAAC,CAAC;MACf;MACA1D,CAAC,IAAI,KAAK;MACVU,WAAW,GAAGiD,qBAAqB,CAACtC,IAAI,CAAC;IAC3C,CAAC;IACDA,IAAI,CAAC,CAAC;IACN,OAAO,MAAMuC,oBAAoB,CAAClD,WAAW,CAAC;EAChD,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;;EAEb;EACArB,SAAS,CAAC,MAAM;IACd,IAAIuB,WAAmB;IACvB,IAAIV,CAAC,GAAG,CAAC;IACT,MAAM6D,QAAQ,GAAGA,CAAA,KAAM;MACrB,MAAMvC,MAAM,GAAGlB,WAAW,CAACmB,OAAO;MAClC,IAAI,CAACD,MAAM,EAAE;MACb,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACnC,IAAI,CAACD,GAAG,EAAE;MACVA,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;MAChDJ,GAAG,CAACsB,IAAI,CAAC,CAAC;MACVtB,GAAG,CAACsC,SAAS,CAACpE,SAAS,GAAC,CAAC,EAAEA,SAAS,GAAC,CAAC,CAAC;MACvC8B,GAAG,CAACwB,SAAS,CAAC,CAAC;MACf,MAAMe,KAAK,GAAG,EAAE;MAChB,IAAIC,YAAY,GAAG,IAAI;MACvB,IAAIC,WAAW,GAAG,IAAI;MACtB,IAAIzD,OAAO,IAAIH,YAAY,CAACkB,OAAO,EAAE;QACnC,MAAMU,IAAI,GAAG5B,YAAY,CAACkB,OAAO,CAACW,qBAAqB,CAAC,CAAC;QACzD,MAAMC,EAAE,GAAG3B,OAAO,CAAC4B,CAAC,GAAGH,IAAI,CAACI,IAAI,GAAG3C,SAAS,GAAC,CAAC;QAC9C,MAAM4C,EAAE,GAAG9B,OAAO,CAAC+B,CAAC,GAAGN,IAAI,CAACO,GAAG,GAAG9C,SAAS,GAAC,CAAC;QAC7CuE,WAAW,GAAGhD,IAAI,CAAC2B,IAAI,CAACT,EAAE,GAACA,EAAE,GAAGG,EAAE,GAACA,EAAE,CAAC;QACtC0B,YAAY,GAAG/C,IAAI,CAACiD,KAAK,CAAC5B,EAAE,EAAEH,EAAE,CAAC;MACnC;MACA,KAAK,IAAIrC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAImB,IAAI,CAACgC,EAAE,GAAG,CAAC,GAAG,IAAI,EAAEnD,CAAC,IAAImB,IAAI,CAACgC,EAAE,GAAC,EAAE,EAAE;QACxD;QACA,IAAIJ,CAAC,GAAGkB,KAAK,GAAG9C,IAAI,CAACa,GAAG,CAAChC,CAAC,GAAG,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGiB,IAAI,CAACc,GAAG,CAACjC,CAAC,GAAG,CAAC,GAAGE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;QAC7E;QACA,IAAIgE,YAAY,KAAK,IAAI,IAAIC,WAAW,KAAK,IAAI,IAAIA,WAAW,GAAG,EAAE,EAAE;UACrE,MAAME,IAAI,GAAGlD,IAAI,CAACmD,GAAG,CAACtE,CAAC,GAAGkE,YAAY,CAAC;UACvC,IAAIG,IAAI,GAAG,GAAG,EAAE;YACdtB,CAAC,IAAI,CAAC,CAAC,GAAGsB,IAAI,GAAC,GAAG,KAAK,EAAE,GAAGF,WAAW,GAAC,CAAC,CAAC,GAAGhD,IAAI,CAACa,GAAG,CAAC9B,CAAC,GAAG,GAAG,CAAC;UAChE;QACF;QACA,MAAMoC,CAAC,GAAGnB,IAAI,CAACc,GAAG,CAACjC,CAAC,CAAC,GAAG+C,CAAC;QACzB,MAAMN,CAAC,GAAGtB,IAAI,CAACa,GAAG,CAAChC,CAAC,CAAC,GAAG+C,CAAC;QACzB,IAAI/C,CAAC,KAAK,CAAC,EAAE0B,GAAG,CAAC2B,MAAM,CAACf,CAAC,EAAEG,CAAC,CAAC,CAAC,KACzBf,GAAG,CAAC4B,MAAM,CAAChB,CAAC,EAAEG,CAAC,CAAC;MACvB;MACAf,GAAG,CAAC6B,SAAS,CAAC,CAAC;MACf7B,GAAG,CAAC+B,WAAW,GAAG,SAAS;MAC3B/B,GAAG,CAACgC,UAAU,GAAG,EAAE;MACnBhC,GAAG,CAAC6C,WAAW,GAAG,sBAAsB;MACxC7C,GAAG,CAAC8C,SAAS,GAAG,GAAG;MACnB9C,GAAG,CAACuB,WAAW,GAAG,IAAI;MACtBvB,GAAG,CAAC+C,MAAM,CAAC,CAAC;MACZ/C,GAAG,CAACkC,OAAO,CAAC,CAAC;MACb1D,CAAC,IAAI,KAAK;MACVU,WAAW,GAAGiD,qBAAqB,CAACE,QAAQ,CAAC;IAC/C,CAAC;IACDA,QAAQ,CAAC,CAAC;IACV,OAAO,MAAMD,oBAAoB,CAAClD,WAAW,CAAC;EAChD,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;;EAEb;EACArB,SAAS,CAAC,MAAM;IACd,MAAMqF,UAAU,GAAIC,CAAa,IAAK;MACpChE,UAAU,CAAC;QAAE2B,CAAC,EAAEqC,CAAC,CAACC,OAAO;QAAEnC,CAAC,EAAEkC,CAAC,CAACE;MAAQ,CAAC,CAAC;IAC5C,CAAC;IACD,MAAMC,WAAW,GAAGA,CAAA,KAAMnE,UAAU,CAAC,IAAI,CAAC;IAC1CoE,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEN,UAAU,CAAC;IAChDK,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAEF,WAAW,CAAC;IAChD,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEP,UAAU,CAAC;MACnDK,MAAM,CAACE,mBAAmB,CAAC,UAAU,EAAEH,WAAW,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpF,OAAA;IACEwF,SAAS,EAAC,uBAAuB;IACjCC,GAAG,EAAE5E,YAAa;IAClB6E,YAAY,EAAEA,CAAA,KAAM3E,YAAY,CAAC,IAAI,CAAE;IACvC4E,YAAY,EAAEA,CAAA,KAAM5E,YAAY,CAAC,KAAK,CAAE;IAAA6E,QAAA,eAExC5F,OAAA;MAAKwF,SAAS,EAAC,aAAa;MAAAI,QAAA,gBAE1B5F,OAAA;QACEyF,GAAG,EAAE7E,WAAY;QACjBuB,KAAK,EAAEjC,SAAU;QACjBkC,MAAM,EAAElC,SAAU;QAClBsF,SAAS,EAAC;MAAyB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eAEFhG,OAAA;QAAKwF,SAAS,EAAC,YAAY;QAAAI,QAAA,gBACzB5F,OAAA;UAAKwF,SAAS,EAAC;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnChG,OAAA;UAAKwF,SAAS,EAAC;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnChG,OAAA;UAAKwF,SAAS,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEpChG,OAAA;UACEyF,GAAG,EAAE9E,SAAU;UACfwB,KAAK,EAAElC,WAAY;UACnBmC,MAAM,EAAEnC,WAAY;UACpBuF,SAAS,EAAC;QAAqB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,EAEDlF,SAAS,iBACRd,OAAA;UAAKiG,GAAG,EAAEnG,OAAQ;UAACoG,GAAG,EAAC,QAAQ;UAACV,SAAS,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtF,EAAA,CAzKID,UAAoB;AAAA0F,EAAA,GAApB1F,UAAoB;AA2K1B,eAAeA,UAAU;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}