{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\chat_bot\\\\src\\\\components\\\\ChatBubble\\\\ChatBubble.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ChatBubble.css';\nimport botIcon from '../../assets/bot_icon.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUBBLE_SIZE = 80;\nconst RING_SIZE = 96;\nconst PLASMA_BLOBS = 5;\nconst PLASMA_COLORS = ['rgba(0,255,255,0.25)', 'rgba(162,89,255,0.22)', 'rgba(255,0,255,0.18)', 'rgba(0,255,247,0.18)', 'rgba(255,97,246,0.15)'];\nfunction lerp(a, b, t) {\n  return a + (b - a) * t;\n}\nfunction lerpAngle(a, b, t) {\n  let diff = b - a;\n  while (diff > Math.PI) diff -= 2 * Math.PI;\n  while (diff < -Math.PI) diff += 2 * Math.PI;\n  return a + diff * t;\n}\nconst ChatBubble = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const neonRingRef = useRef(null);\n  const containerRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [pointer, setPointer] = useState(null);\n\n  // Animate floating plasma blobs (no pointer attraction)\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    const phases = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => Math.random() * 1000);\n    const speeds = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 0.7 + Math.random() * 0.7);\n    const radii = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 16 + Math.random() * 12);\n    const draw = () => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\n        let cx = BUBBLE_SIZE / 2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\n        let cy = BUBBLE_SIZE / 2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\n        ctx.save();\n        ctx.globalAlpha = 0.7;\n        ctx.beginPath();\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI / 24) {\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\n          const x = cx + Math.cos(a) * edge;\n          const y = cy + Math.sin(a) * edge;\n          if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowBlur = 16;\n        ctx.fill();\n        ctx.restore();\n      }\n      t += 0.018;\n      animationId = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => cancelAnimationFrame(animationId);\n  }, []);\n\n  // Neon plasma ring animation (single, smooth, gradient ring with trailing bulge)\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    let pullAngle = 0; // The current angle the bulge is pointing to\n    let targetAngle = 0; // The angle to lerp toward\n    const drawRing = () => {\n      const canvas = neonRingRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(RING_SIZE / 2, RING_SIZE / 2);\n      const baseR = 40;\n      // Calculate target angle if pointer is near\n      let bulge = 0;\n      if (pointer && containerRef.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        const px = pointer.x - rect.left - RING_SIZE / 2;\n        const py = pointer.y - rect.top - RING_SIZE / 2;\n        const dist = Math.sqrt(px * px + py * py);\n        if (dist < 120) {\n          targetAngle = Math.atan2(py, px);\n          bulge = Math.max(0, 1 - dist / 120);\n        }\n      }\n      // Smoothly interpolate pullAngle toward targetAngle\n      pullAngle = lerpAngle(pullAngle, targetAngle, 0.12);\n      // Create a gradient for the ring\n      const grad = ctx.createConicGradient(0, 0, 0);\n      grad.addColorStop(0, '#00fff7');\n      grad.addColorStop(0.25, '#a259ff');\n      grad.addColorStop(0.5, '#ff3cac');\n      grad.addColorStop(0.75, '#00f0ff');\n      grad.addColorStop(1, '#00fff7');\n      ctx.strokeStyle = grad;\n      ctx.shadowColor = '#00fff7';\n      ctx.shadowBlur = 16;\n      ctx.lineWidth = 4.5;\n      ctx.globalAlpha = 0.85;\n      ctx.beginPath();\n      for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI / 96) {\n        let r = baseR + Math.sin(a * 6 + t * 2) * 2 + Math.cos(a * 3 + t * 1.2) * 1.5;\n        // Bulge only in the direction of pullAngle\n        let bulgeStrength = 0;\n        let diff = Math.abs(a - pullAngle);\n        if (diff > Math.PI) diff = 2 * Math.PI - diff;\n        if (diff < 0.6) {\n          bulgeStrength = (1 - diff / 0.6) * 16 * bulge * Math.sin(t * 2.5);\n        }\n        r += bulgeStrength;\n        const x = Math.cos(a) * r;\n        const y = Math.sin(a) * r;\n        if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n      t += 0.018;\n      animationId = requestAnimationFrame(drawRing);\n    };\n    drawRing();\n    return () => cancelAnimationFrame(animationId);\n  }, [pointer]);\n\n  // Mouse move tracking for pointer attraction (only for outer ring)\n  useEffect(() => {\n    const handleMove = e => {\n      setPointer({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    const handleLeave = () => setPointer(null);\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseout', handleLeave);\n    return () => {\n      window.removeEventListener('mousemove', handleMove);\n      window.removeEventListener('mouseout', handleLeave);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bubble-container\",\n    ref: containerRef,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-bubble\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: neonRingRef,\n        width: RING_SIZE,\n        height: RING_SIZE,\n        className: \"plasma-neon-ring-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plasma-orb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-core\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-glow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-trail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: BUBBLE_SIZE,\n          height: BUBBLE_SIZE,\n          className: \"plasma-blobs-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), isHovered && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: botIcon,\n          alt: \"AI Bot\",\n          className: \"bot-gif-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBubble, \"anBDfJYuhqTc4pF0jwGo43gyvmE=\");\n_c = ChatBubble;\nexport default ChatBubble;\nvar _c;\n$RefreshReg$(_c, \"ChatBubble\");","map":{"version":3,"names":["React","useEffect","useRef","useState","botIcon","jsxDEV","_jsxDEV","BUBBLE_SIZE","RING_SIZE","PLASMA_BLOBS","PLASMA_COLORS","lerp","a","b","t","lerpAngle","diff","Math","PI","ChatBubble","_s","canvasRef","neonRingRef","containerRef","isHovered","setIsHovered","pointer","setPointer","animationId","phases","Array","from","length","_","i","random","speeds","radii","draw","canvas","current","ctx","getContext","clearRect","width","height","cx","sin","cos","cy","r","save","globalAlpha","beginPath","edge","x","y","moveTo","lineTo","closePath","fillStyle","shadowColor","shadowBlur","fill","restore","requestAnimationFrame","cancelAnimationFrame","pullAngle","targetAngle","drawRing","translate","baseR","bulge","rect","getBoundingClientRect","px","left","py","top","dist","sqrt","atan2","max","grad","createConicGradient","addColorStop","strokeStyle","lineWidth","bulgeStrength","abs","stroke","handleMove","e","clientX","clientY","handleLeave","window","addEventListener","removeEventListener","className","ref","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Projects/chat_bot/src/components/ChatBubble/ChatBubble.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatBubble.css';\r\nimport botIcon from '../../assets/bot_icon.gif';\r\n\r\nconst BUBBLE_SIZE = 80;\r\nconst RING_SIZE = 96;\r\nconst PLASMA_BLOBS = 5;\r\nconst PLASMA_COLORS = [\r\n  'rgba(0,255,255,0.25)',\r\n  'rgba(162,89,255,0.22)',\r\n  'rgba(255,0,255,0.18)',\r\n  'rgba(0,255,247,0.18)',\r\n  'rgba(255,97,246,0.15)'\r\n];\r\n\r\nfunction lerp(a: number, b: number, t: number) {\r\n  return a + (b - a) * t;\r\n}\r\n\r\nfunction lerpAngle(a: number, b: number, t: number) {\r\n  let diff = b - a;\r\n  while (diff > Math.PI) diff -= 2 * Math.PI;\r\n  while (diff < -Math.PI) diff += 2 * Math.PI;\r\n  return a + diff * t;\r\n}\r\n\r\nconst ChatBubble: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const neonRingRef = useRef<HTMLCanvasElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [pointer, setPointer] = useState<{x: number, y: number} | null>(null);\r\n\r\n  // Animate floating plasma blobs (no pointer attraction)\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    const phases = Array.from({length: PLASMA_BLOBS}, (_, i) => Math.random() * 1000);\r\n    const speeds = Array.from({length: PLASMA_BLOBS}, (_, i) => 0.7 + Math.random() * 0.7);\r\n    const radii = Array.from({length: PLASMA_BLOBS}, (_, i) => 16 + Math.random() * 12);\r\n    const draw = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\r\n        let cx = BUBBLE_SIZE/2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\r\n        let cy = BUBBLE_SIZE/2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\r\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\r\n        ctx.save();\r\n        ctx.globalAlpha = 0.7;\r\n        ctx.beginPath();\r\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI/24) {\r\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\r\n          const x = cx + Math.cos(a) * edge;\r\n          const y = cy + Math.sin(a) * edge;\r\n          if (a === 0) ctx.moveTo(x, y);\r\n          else ctx.lineTo(x, y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowBlur = 16;\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(draw);\r\n    };\r\n    draw();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, []);\r\n\r\n  // Neon plasma ring animation (single, smooth, gradient ring with trailing bulge)\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    let pullAngle = 0; // The current angle the bulge is pointing to\r\n    let targetAngle = 0; // The angle to lerp toward\r\n    const drawRing = () => {\r\n      const canvas = neonRingRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.save();\r\n      ctx.translate(RING_SIZE/2, RING_SIZE/2);\r\n      const baseR = 40;\r\n      // Calculate target angle if pointer is near\r\n      let bulge = 0;\r\n      if (pointer && containerRef.current) {\r\n        const rect = containerRef.current.getBoundingClientRect();\r\n        const px = pointer.x - rect.left - RING_SIZE/2;\r\n        const py = pointer.y - rect.top - RING_SIZE/2;\r\n        const dist = Math.sqrt(px*px + py*py);\r\n        if (dist < 120) {\r\n          targetAngle = Math.atan2(py, px);\r\n          bulge = Math.max(0, 1 - dist/120);\r\n        }\r\n      }\r\n      // Smoothly interpolate pullAngle toward targetAngle\r\n      pullAngle = lerpAngle(pullAngle, targetAngle, 0.12);\r\n      // Create a gradient for the ring\r\n      const grad = ctx.createConicGradient(0, 0, 0);\r\n      grad.addColorStop(0, '#00fff7');\r\n      grad.addColorStop(0.25, '#a259ff');\r\n      grad.addColorStop(0.5, '#ff3cac');\r\n      grad.addColorStop(0.75, '#00f0ff');\r\n      grad.addColorStop(1, '#00fff7');\r\n      ctx.strokeStyle = grad;\r\n      ctx.shadowColor = '#00fff7';\r\n      ctx.shadowBlur = 16;\r\n      ctx.lineWidth = 4.5;\r\n      ctx.globalAlpha = 0.85;\r\n      ctx.beginPath();\r\n      for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI/96) {\r\n        let r = baseR + Math.sin(a * 6 + t * 2) * 2 + Math.cos(a * 3 + t * 1.2) * 1.5;\r\n        // Bulge only in the direction of pullAngle\r\n        let bulgeStrength = 0;\r\n        let diff = Math.abs(a - pullAngle);\r\n        if (diff > Math.PI) diff = 2 * Math.PI - diff;\r\n        if (diff < 0.6) {\r\n          bulgeStrength = (1 - diff/0.6) * 16 * bulge * Math.sin(t * 2.5);\r\n        }\r\n        r += bulgeStrength;\r\n        const x = Math.cos(a) * r;\r\n        const y = Math.sin(a) * r;\r\n        if (a === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n      ctx.restore();\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(drawRing);\r\n    };\r\n    drawRing();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, [pointer]);\r\n\r\n  // Mouse move tracking for pointer attraction (only for outer ring)\r\n  useEffect(() => {\r\n    const handleMove = (e: MouseEvent) => {\r\n      setPointer({ x: e.clientX, y: e.clientY });\r\n    };\r\n    const handleLeave = () => setPointer(null);\r\n    window.addEventListener('mousemove', handleMove);\r\n    window.addEventListener('mouseout', handleLeave);\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMove);\r\n      window.removeEventListener('mouseout', handleLeave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"chat-bubble-container\"\r\n      ref={containerRef}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <div className=\"chat-bubble\">\r\n        {/* Neon plasma ring canvas (single, smooth, gradient) */}\r\n        <canvas\r\n          ref={neonRingRef}\r\n          width={RING_SIZE}\r\n          height={RING_SIZE}\r\n          className=\"plasma-neon-ring-canvas\"\r\n        />\r\n        {/* CSS-based plasma orb */}\r\n        <div className=\"plasma-orb\">\r\n          <div className=\"plasma-core\"></div>\r\n          <div className=\"plasma-glow\"></div>\r\n          <div className=\"plasma-trail\"></div>\r\n          {/* Canvas for floating plasma blobs */}\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={BUBBLE_SIZE}\r\n            height={BUBBLE_SIZE}\r\n            className=\"plasma-blobs-canvas\"\r\n          />\r\n          {/* On hover, show the GIF covering the orb */}\r\n          {isHovered && (\r\n            <img src={botIcon} alt=\"AI Bot\" className=\"bot-gif-full\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBubble; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}