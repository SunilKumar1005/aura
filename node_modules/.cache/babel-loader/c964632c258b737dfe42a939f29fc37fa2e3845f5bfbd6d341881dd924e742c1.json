{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\chat_bot\\\\src\\\\components\\\\ChatBotUI\\\\ChatMessage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './ChatMessages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingDots = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-dots\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-dot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-dot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-dot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = LoadingDots;\nconst ChatMessage = ({\n  type,\n  content,\n  isLoading = false,\n  onLoadComplete,\n  isNew = true\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [displayedContent, setDisplayedContent] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const hasAnimated = useRef(false);\n  useEffect(() => {\n    if (isNew && !hasAnimated.current) {\n      const timer = setTimeout(() => {\n        setIsVisible(true);\n        hasAnimated.current = true;\n      }, 50);\n      return () => clearTimeout(timer);\n    } else {\n      setIsVisible(true);\n      setDisplayedContent(content);\n    }\n  }, [isNew, content]);\n  useEffect(() => {\n    if (type === 'bot' && !isLoading && isNew && !hasAnimated.current) {\n      setIsTyping(true);\n      let currentIndex = 0;\n      const typingInterval = setInterval(() => {\n        if (currentIndex <= content.length) {\n          setDisplayedContent(content.slice(0, currentIndex));\n          currentIndex++;\n        } else {\n          clearInterval(typingInterval);\n          setIsTyping(false);\n          onLoadComplete === null || onLoadComplete === void 0 ? void 0 : onLoadComplete();\n          hasAnimated.current = true;\n        }\n      }, 20);\n      return () => clearInterval(typingInterval);\n    } else if (!isNew) {\n      setDisplayedContent(content);\n    }\n  }, [content, type, isLoading, onLoadComplete, isNew]);\n  const renderContent = () => {\n    if (isLoading && isNew) {\n      return /*#__PURE__*/_jsxDEV(LoadingDots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    }\n    if (type === 'bot' && isTyping && isNew) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-animation\",\n        children: [displayedContent, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typing-cursor\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: displayedContent.replace(/<strong>(.*?)<\\/strong>/g, '<strong>$1</strong>').replace(/<em>(.*?)<\\/em>/g, '<em>$1</em>').replace(/<code>(.*?)<\\/code>/g, '<code>$1</code>').replace(/<a href=\"(.*?)\">(.*?)<\\/a>/g, '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$2</a>')\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-msg ${type} ${isLoading && isNew ? 'loading' : ''} ${isVisible ? 'visible' : ''}`,\n    style: {\n      opacity: isVisible ? 1 : 0\n    },\n    \"aria-label\": `${type === 'user' ? 'You' : 'AI Assistant'}`,\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatMessage, \"QMYBBYYIB1nalIvmNiaJvHWcmck=\");\n_c2 = ChatMessage;\nexport default ChatMessage;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingDots\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","LoadingDots","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChatMessage","type","content","isLoading","onLoadComplete","isNew","_s","isVisible","setIsVisible","displayedContent","setDisplayedContent","isTyping","setIsTyping","hasAnimated","current","timer","setTimeout","clearTimeout","currentIndex","typingInterval","setInterval","length","slice","clearInterval","renderContent","dangerouslySetInnerHTML","__html","replace","style","opacity","_c2","$RefreshReg$"],"sources":["C:/Projects/chat_bot/src/components/ChatBotUI/ChatMessage.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport './ChatMessages.css';\r\n\r\ninterface ChatMessageProps {\r\n  type: 'user' | 'bot';\r\n  content: string;\r\n  isLoading?: boolean;\r\n  onLoadComplete?: () => void;\r\n  isNew?: boolean;\r\n}\r\n\r\nconst LoadingDots: React.FC = () => (\r\n  <div className=\"loading-dots\">\r\n    <div className=\"loading-dot\" />\r\n    <div className=\"loading-dot\" />\r\n    <div className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nconst ChatMessage: React.FC<ChatMessageProps> = ({\r\n  type,\r\n  content,\r\n  isLoading = false,\r\n  onLoadComplete,\r\n  isNew = true\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [displayedContent, setDisplayedContent] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const hasAnimated = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (isNew && !hasAnimated.current) {\r\n      const timer = setTimeout(() => {\r\n        setIsVisible(true);\r\n        hasAnimated.current = true;\r\n      }, 50);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setIsVisible(true);\r\n      setDisplayedContent(content);\r\n    }\r\n  }, [isNew, content]);\r\n\r\n  useEffect(() => {\r\n    if (type === 'bot' && !isLoading && isNew && !hasAnimated.current) {\r\n      setIsTyping(true);\r\n      let currentIndex = 0;\r\n      const typingInterval = setInterval(() => {\r\n        if (currentIndex <= content.length) {\r\n          setDisplayedContent(content.slice(0, currentIndex));\r\n          currentIndex++;\r\n        } else {\r\n          clearInterval(typingInterval);\r\n          setIsTyping(false);\r\n          onLoadComplete?.();\r\n          hasAnimated.current = true;\r\n        }\r\n      }, 20);\r\n\r\n      return () => clearInterval(typingInterval);\r\n    } else if (!isNew) {\r\n      setDisplayedContent(content);\r\n    }\r\n  }, [content, type, isLoading, onLoadComplete, isNew]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading && isNew) {\r\n      return <LoadingDots />;\r\n    }\r\n\r\n    if (type === 'bot' && isTyping && isNew) {\r\n      return (\r\n        <div className=\"typing-animation\">\r\n          {displayedContent}\r\n          <span className=\"typing-cursor\">|</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html: displayedContent\r\n            .replace(/<strong>(.*?)<\\/strong>/g, '<strong>$1</strong>')\r\n            .replace(/<em>(.*?)<\\/em>/g, '<em>$1</em>')\r\n            .replace(/<code>(.*?)<\\/code>/g, '<code>$1</code>')\r\n            .replace(/<a href=\"(.*?)\">(.*?)<\\/a>/g, '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$2</a>')\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatbot-msg ${type} ${isLoading && isNew ? 'loading' : ''} ${isVisible ? 'visible' : ''}`}\r\n      style={{ opacity: isVisible ? 1 : 0 }}\r\n      aria-label={`${type === 'user' ? 'You' : 'AI Assistant'}`}\r\n    >\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}