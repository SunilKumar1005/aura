{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\chat_bot\\\\src\\\\components\\\\ChatBubble\\\\ChatBubble.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ChatBubble.css';\nimport botIcon from '../../assets/bot_icon.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUBBLE_SIZE = 80;\nconst RING_SIZE = 96;\nconst PLASMA_BLOBS = 5;\nconst PLASMA_COLORS = ['rgba(0,255,255,0.25)', 'rgba(162,89,255,0.22)', 'rgba(255,0,255,0.18)', 'rgba(0,255,247,0.18)', 'rgba(255,97,246,0.15)'];\nfunction lerp(a, b, t) {\n  return a + (b - a) * t;\n}\nfunction lerpAngle(a, b, t) {\n  let diff = b - a;\n  while (diff > Math.PI) diff -= 2 * Math.PI;\n  while (diff < -Math.PI) diff += 2 * Math.PI;\n  return a + diff * t;\n}\nconst ChatBubble = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const neonRingRef = useRef(null);\n  const containerRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [mouse, setMouse] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n\n  // Persist pullAngle and bulgeLen across frames\n  const pullAngleRef = useRef(0);\n  const bulgeLenRef = useRef(0);\n\n  // Animate floating plasma blobs (no pointer attraction)\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    const phases = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => Math.random() * 1000);\n    const speeds = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 0.7 + Math.random() * 0.7);\n    const radii = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 16 + Math.random() * 12);\n    const draw = () => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\n        let cx = BUBBLE_SIZE / 2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\n        let cy = BUBBLE_SIZE / 2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\n        ctx.save();\n        ctx.globalAlpha = 0.7;\n        ctx.beginPath();\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI / 24) {\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\n          const x = cx + Math.cos(a) * edge;\n          const y = cy + Math.sin(a) * edge;\n          if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowBlur = 16;\n        ctx.fill();\n        ctx.restore();\n      }\n      t += 0.018;\n      animationId = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => cancelAnimationFrame(animationId);\n  }, []);\n\n  // Neon plasma ring animation with sharp bulge toward mouse\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    let targetAngle = pullAngleRef.current;\n    let targetBulgeLen = bulgeLenRef.current;\n    const drawRing = () => {\n      const canvas = neonRingRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(RING_SIZE / 2, RING_SIZE / 2);\n      const baseR = 40;\n      // Calculate target angle and bulge length\n      if (containerRef.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        const cx = rect.left + RING_SIZE / 2;\n        const cy = rect.top + RING_SIZE / 2;\n        const dx = mouse.x - cx;\n        const dy = mouse.y - cy;\n        targetAngle = Math.atan2(dy, dx);\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        // Bulge length: max when close, min when far\n        targetBulgeLen = lerp(12, 36, Math.max(0, 1 - Math.min(dist, 400) / 400));\n      }\n      // Smoothly interpolate pullAngle and bulgeLen\n      pullAngleRef.current = lerpAngle(pullAngleRef.current, targetAngle, 0.18);\n      bulgeLenRef.current = lerp(bulgeLenRef.current, targetBulgeLen, 0.18);\n      // Create a gradient for the ring\n      const grad = ctx.createConicGradient(0, 0, 0);\n      grad.addColorStop(0, '#00fff7');\n      grad.addColorStop(0.25, '#a259ff');\n      grad.addColorStop(0.5, '#ff3cac');\n      grad.addColorStop(0.75, '#00f0ff');\n      grad.addColorStop(1, '#00fff7');\n      ctx.strokeStyle = grad;\n      ctx.shadowColor = '#00fff7';\n      ctx.shadowBlur = 16;\n      ctx.lineWidth = 4.5;\n      ctx.globalAlpha = 0.85;\n      ctx.beginPath();\n      const spikeWidth = 0.18; // radians, width of the sharp bulge\n      for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI / 96) {\n        let r = baseR + Math.sin(a * 6 + t * 2) * 2 + Math.cos(a * 3 + t * 1.2) * 1.5;\n        // Sharp bulge in the direction of pullAngle\n        let diff = a - pullAngleRef.current;\n        if (diff > Math.PI) diff -= 2 * Math.PI;\n        if (diff < -Math.PI) diff += 2 * Math.PI;\n        if (Math.abs(diff) < spikeWidth) {\n          // Linear spike\n          r += (1 - Math.abs(diff) / spikeWidth) * bulgeLenRef.current;\n        }\n        const x = Math.cos(a) * r;\n        const y = Math.sin(a) * r;\n        if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n      t += 0.018;\n      animationId = requestAnimationFrame(drawRing);\n    };\n    drawRing();\n    return () => cancelAnimationFrame(animationId);\n  }, [mouse]);\n\n  // Mouse move tracking (global)\n  useEffect(() => {\n    const handleMove = e => {\n      setMouse({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    window.addEventListener('mousemove', handleMove);\n    return () => {\n      window.removeEventListener('mousemove', handleMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bubble-container\",\n    ref: containerRef,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-bubble\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: neonRingRef,\n        width: RING_SIZE,\n        height: RING_SIZE,\n        className: \"plasma-neon-ring-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plasma-orb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-core\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-glow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-trail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: BUBBLE_SIZE,\n          height: BUBBLE_SIZE,\n          className: \"plasma-blobs-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), isHovered && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: botIcon,\n          alt: \"AI Bot\",\n          className: \"bot-gif-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBubble, \"G72t4/znIXM9ojRwuvbbJM2GPGs=\");\n_c = ChatBubble;\nexport default ChatBubble;\nvar _c;\n$RefreshReg$(_c, \"ChatBubble\");","map":{"version":3,"names":["React","useEffect","useRef","useState","botIcon","jsxDEV","_jsxDEV","BUBBLE_SIZE","RING_SIZE","PLASMA_BLOBS","PLASMA_COLORS","lerp","a","b","t","lerpAngle","diff","Math","PI","ChatBubble","_s","canvasRef","neonRingRef","containerRef","isHovered","setIsHovered","mouse","setMouse","x","window","innerWidth","y","innerHeight","pullAngleRef","bulgeLenRef","animationId","phases","Array","from","length","_","i","random","speeds","radii","draw","canvas","current","ctx","getContext","clearRect","width","height","cx","sin","cos","cy","r","save","globalAlpha","beginPath","edge","moveTo","lineTo","closePath","fillStyle","shadowColor","shadowBlur","fill","restore","requestAnimationFrame","cancelAnimationFrame","targetAngle","targetBulgeLen","drawRing","translate","baseR","rect","getBoundingClientRect","left","top","dx","dy","atan2","dist","sqrt","max","min","grad","createConicGradient","addColorStop","strokeStyle","lineWidth","spikeWidth","abs","stroke","handleMove","e","clientX","clientY","addEventListener","removeEventListener","className","ref","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Projects/chat_bot/src/components/ChatBubble/ChatBubble.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatBubble.css';\r\nimport botIcon from '../../assets/bot_icon.gif';\r\n\r\nconst BUBBLE_SIZE = 80;\r\nconst RING_SIZE = 96;\r\nconst PLASMA_BLOBS = 5;\r\nconst PLASMA_COLORS = [\r\n  'rgba(0,255,255,0.25)',\r\n  'rgba(162,89,255,0.22)',\r\n  'rgba(255,0,255,0.18)',\r\n  'rgba(0,255,247,0.18)',\r\n  'rgba(255,97,246,0.15)'\r\n];\r\n\r\nfunction lerp(a: number, b: number, t: number) {\r\n  return a + (b - a) * t;\r\n}\r\n\r\nfunction lerpAngle(a: number, b: number, t: number) {\r\n  let diff = b - a;\r\n  while (diff > Math.PI) diff -= 2 * Math.PI;\r\n  while (diff < -Math.PI) diff += 2 * Math.PI;\r\n  return a + diff * t;\r\n}\r\n\r\nconst ChatBubble: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const neonRingRef = useRef<HTMLCanvasElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [mouse, setMouse] = useState<{x: number, y: number}>({x: window.innerWidth/2, y: window.innerHeight/2});\r\n\r\n  // Persist pullAngle and bulgeLen across frames\r\n  const pullAngleRef = useRef(0);\r\n  const bulgeLenRef = useRef(0);\r\n\r\n  // Animate floating plasma blobs (no pointer attraction)\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    const phases = Array.from({length: PLASMA_BLOBS}, (_, i) => Math.random() * 1000);\r\n    const speeds = Array.from({length: PLASMA_BLOBS}, (_, i) => 0.7 + Math.random() * 0.7);\r\n    const radii = Array.from({length: PLASMA_BLOBS}, (_, i) => 16 + Math.random() * 12);\r\n    const draw = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\r\n        let cx = BUBBLE_SIZE/2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\r\n        let cy = BUBBLE_SIZE/2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\r\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\r\n        ctx.save();\r\n        ctx.globalAlpha = 0.7;\r\n        ctx.beginPath();\r\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI/24) {\r\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\r\n          const x = cx + Math.cos(a) * edge;\r\n          const y = cy + Math.sin(a) * edge;\r\n          if (a === 0) ctx.moveTo(x, y);\r\n          else ctx.lineTo(x, y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowBlur = 16;\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(draw);\r\n    };\r\n    draw();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, []);\r\n\r\n  // Neon plasma ring animation with sharp bulge toward mouse\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    let targetAngle = pullAngleRef.current;\r\n    let targetBulgeLen = bulgeLenRef.current;\r\n    const drawRing = () => {\r\n      const canvas = neonRingRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.save();\r\n      ctx.translate(RING_SIZE/2, RING_SIZE/2);\r\n      const baseR = 40;\r\n      // Calculate target angle and bulge length\r\n      if (containerRef.current) {\r\n        const rect = containerRef.current.getBoundingClientRect();\r\n        const cx = rect.left + RING_SIZE/2;\r\n        const cy = rect.top + RING_SIZE/2;\r\n        const dx = mouse.x - cx;\r\n        const dy = mouse.y - cy;\r\n        targetAngle = Math.atan2(dy, dx);\r\n        const dist = Math.sqrt(dx*dx + dy*dy);\r\n        // Bulge length: max when close, min when far\r\n        targetBulgeLen = lerp(12, 36, Math.max(0, 1 - Math.min(dist, 400)/400));\r\n      }\r\n      // Smoothly interpolate pullAngle and bulgeLen\r\n      pullAngleRef.current = lerpAngle(pullAngleRef.current, targetAngle, 0.18);\r\n      bulgeLenRef.current = lerp(bulgeLenRef.current, targetBulgeLen, 0.18);\r\n      // Create a gradient for the ring\r\n      const grad = ctx.createConicGradient(0, 0, 0);\r\n      grad.addColorStop(0, '#00fff7');\r\n      grad.addColorStop(0.25, '#a259ff');\r\n      grad.addColorStop(0.5, '#ff3cac');\r\n      grad.addColorStop(0.75, '#00f0ff');\r\n      grad.addColorStop(1, '#00fff7');\r\n      ctx.strokeStyle = grad;\r\n      ctx.shadowColor = '#00fff7';\r\n      ctx.shadowBlur = 16;\r\n      ctx.lineWidth = 4.5;\r\n      ctx.globalAlpha = 0.85;\r\n      ctx.beginPath();\r\n      const spikeWidth = 0.18; // radians, width of the sharp bulge\r\n      for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI/96) {\r\n        let r = baseR + Math.sin(a * 6 + t * 2) * 2 + Math.cos(a * 3 + t * 1.2) * 1.5;\r\n        // Sharp bulge in the direction of pullAngle\r\n        let diff = a - pullAngleRef.current;\r\n        if (diff > Math.PI) diff -= 2 * Math.PI;\r\n        if (diff < -Math.PI) diff += 2 * Math.PI;\r\n        if (Math.abs(diff) < spikeWidth) {\r\n          // Linear spike\r\n          r += (1 - Math.abs(diff)/spikeWidth) * bulgeLenRef.current;\r\n        }\r\n        const x = Math.cos(a) * r;\r\n        const y = Math.sin(a) * r;\r\n        if (a === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n      ctx.restore();\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(drawRing);\r\n    };\r\n    drawRing();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, [mouse]);\r\n\r\n  // Mouse move tracking (global)\r\n  useEffect(() => {\r\n    const handleMove = (e: MouseEvent) => {\r\n      setMouse({ x: e.clientX, y: e.clientY });\r\n    };\r\n    window.addEventListener('mousemove', handleMove);\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMove);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"chat-bubble-container\"\r\n      ref={containerRef}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <div className=\"chat-bubble\">\r\n        {/* Neon plasma ring canvas (single, sharp bulge) */}\r\n        <canvas\r\n          ref={neonRingRef}\r\n          width={RING_SIZE}\r\n          height={RING_SIZE}\r\n          className=\"plasma-neon-ring-canvas\"\r\n        />\r\n        {/* CSS-based plasma orb */}\r\n        <div className=\"plasma-orb\">\r\n          <div className=\"plasma-core\"></div>\r\n          <div className=\"plasma-glow\"></div>\r\n          <div className=\"plasma-trail\"></div>\r\n          {/* Canvas for floating plasma blobs */}\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={BUBBLE_SIZE}\r\n            height={BUBBLE_SIZE}\r\n            className=\"plasma-blobs-canvas\"\r\n          />\r\n          {/* On hover, show the GIF covering the orb */}\r\n          {isHovered && (\r\n            <img src={botIcon} alt=\"AI Bot\" className=\"bot-gif-full\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBubble; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}