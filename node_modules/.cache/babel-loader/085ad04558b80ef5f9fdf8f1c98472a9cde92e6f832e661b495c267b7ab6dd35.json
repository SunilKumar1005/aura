{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\chat_bot\\\\src\\\\components\\\\ChatBubble\\\\ChatBubble.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ChatBubble.css';\nimport botIcon from '../../assets/bot_icon.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUBBLE_SIZE = 80;\nconst RING_SIZE = 96;\nconst PLASMA_BLOBS = 5;\nconst PLASMA_COLORS = ['rgba(0,255,255,0.25)', 'rgba(162,89,255,0.22)', 'rgba(255,0,255,0.18)', 'rgba(0,255,247,0.18)', 'rgba(255,97,246,0.15)'];\nconst OUTER_RING_COLORS = ['rgba(30,40,90,0.7)',\n// deep blue\n'rgba(80,0,120,0.6)',\n// dark purple\n'rgba(60,0,60,0.5)',\n// magenta\n'rgba(0,40,60,0.5)',\n// cyan shadow\n'rgba(60,0,40,0.4)' // dark pink\n];\nfunction lerp(a, b, t) {\n  return a + (b - a) * t;\n}\nconst ChatBubble = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const neonRingRef = useRef(null);\n  const containerRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [pointer, setPointer] = useState(null);\n\n  // Animate floating plasma blobs (no pointer attraction)\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    const phases = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => Math.random() * 1000);\n    const speeds = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 0.7 + Math.random() * 0.7);\n    const radii = Array.from({\n      length: PLASMA_BLOBS\n    }, (_, i) => 16 + Math.random() * 12);\n    const draw = () => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\n        let cx = BUBBLE_SIZE / 2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\n        let cy = BUBBLE_SIZE / 2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\n        // No pointer attraction for inner blobs\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\n        ctx.save();\n        ctx.globalAlpha = 0.7;\n        ctx.beginPath();\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI / 24) {\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\n          const x = cx + Math.cos(a) * edge;\n          const y = cy + Math.sin(a) * edge;\n          if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\n        ctx.shadowBlur = 16;\n        ctx.fill();\n        ctx.restore();\n      }\n      t += 0.018;\n      animationId = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => cancelAnimationFrame(animationId);\n  }, []); // <-- no pointer dependency\n\n  // Neon plasma ring animation (multiple rings, only these respond to pointer)\n  useEffect(() => {\n    let animationId;\n    let t = 0;\n    const drawRing = () => {\n      const canvas = neonRingRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(RING_SIZE / 2, RING_SIZE / 2);\n      const baseR = 40;\n      let pointerAngle = null;\n      let pointerDist = null;\n      if (pointer && containerRef.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        const px = pointer.x - rect.left - RING_SIZE / 2;\n        const py = pointer.y - rect.top - RING_SIZE / 2;\n        pointerDist = Math.sqrt(px * px + py * py);\n        pointerAngle = Math.atan2(py, px);\n      }\n      for (let ring = 0; ring < OUTER_RING_COLORS.length; ring++) {\n        ctx.beginPath();\n        const phase = t * (1.2 + ring * 0.13) + ring * 1.5;\n        for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI / 64) {\n          let r = baseR + ring * 3 + Math.sin(a * (6 + ring) + phase) * (2 + ring) + Math.cos(a * (3 + ring) + phase * 0.7) * (1.5 + ring * 0.5);\n          // Only the outer ring(s) respond to pointer\n          if (pointerAngle !== null && pointerDist !== null && pointerDist < 80) {\n            const diff = Math.abs(a - pointerAngle);\n            if (diff < 0.7) {\n              r += (1 - diff / 0.7) * (12 + ring * 4 - pointerDist / 8) * Math.sin(phase * 1.5);\n            }\n          }\n          const x = Math.cos(a) * r;\n          const y = Math.sin(a) * r;\n          if (a === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.shadowColor = OUTER_RING_COLORS[ring];\n        ctx.shadowBlur = 12 + ring * 4;\n        ctx.strokeStyle = OUTER_RING_COLORS[ring];\n        ctx.lineWidth = 2.2 + ring * 0.7;\n        ctx.globalAlpha = 0.7 - ring * 0.12;\n        ctx.stroke();\n      }\n      ctx.restore();\n      t += 0.018;\n      animationId = requestAnimationFrame(drawRing);\n    };\n    drawRing();\n    return () => cancelAnimationFrame(animationId);\n  }, [pointer]);\n\n  // Mouse move tracking for pointer attraction (only for outer ring)\n  useEffect(() => {\n    const handleMove = e => {\n      setPointer({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    const handleLeave = () => setPointer(null);\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseout', handleLeave);\n    return () => {\n      window.removeEventListener('mousemove', handleMove);\n      window.removeEventListener('mouseout', handleLeave);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bubble-container\",\n    ref: containerRef,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-bubble\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: neonRingRef,\n        width: RING_SIZE,\n        height: RING_SIZE,\n        className: \"plasma-neon-ring-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plasma-orb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-core\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-glow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plasma-trail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: BUBBLE_SIZE,\n          height: BUBBLE_SIZE,\n          className: \"plasma-blobs-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), isHovered && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: botIcon,\n          alt: \"AI Bot\",\n          className: \"bot-gif-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBubble, \"anBDfJYuhqTc4pF0jwGo43gyvmE=\");\n_c = ChatBubble;\nexport default ChatBubble;\nvar _c;\n$RefreshReg$(_c, \"ChatBubble\");","map":{"version":3,"names":["React","useEffect","useRef","useState","botIcon","jsxDEV","_jsxDEV","BUBBLE_SIZE","RING_SIZE","PLASMA_BLOBS","PLASMA_COLORS","OUTER_RING_COLORS","lerp","a","b","t","ChatBubble","_s","canvasRef","neonRingRef","containerRef","isHovered","setIsHovered","pointer","setPointer","animationId","phases","Array","from","length","_","i","Math","random","speeds","radii","draw","canvas","current","ctx","getContext","clearRect","width","height","cx","sin","cos","cy","r","save","globalAlpha","beginPath","PI","edge","x","y","moveTo","lineTo","closePath","fillStyle","shadowColor","shadowBlur","fill","restore","requestAnimationFrame","cancelAnimationFrame","drawRing","translate","baseR","pointerAngle","pointerDist","rect","getBoundingClientRect","px","left","py","top","sqrt","atan2","ring","phase","diff","abs","strokeStyle","lineWidth","stroke","handleMove","e","clientX","clientY","handleLeave","window","addEventListener","removeEventListener","className","ref","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Projects/chat_bot/src/components/ChatBubble/ChatBubble.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatBubble.css';\r\nimport botIcon from '../../assets/bot_icon.gif';\r\n\r\nconst BUBBLE_SIZE = 80;\r\nconst RING_SIZE = 96;\r\nconst PLASMA_BLOBS = 5;\r\nconst PLASMA_COLORS = [\r\n  'rgba(0,255,255,0.25)',\r\n  'rgba(162,89,255,0.22)',\r\n  'rgba(255,0,255,0.18)',\r\n  'rgba(0,255,247,0.18)',\r\n  'rgba(255,97,246,0.15)'\r\n];\r\nconst OUTER_RING_COLORS = [\r\n  'rgba(30,40,90,0.7)', // deep blue\r\n  'rgba(80,0,120,0.6)', // dark purple\r\n  'rgba(60,0,60,0.5)', // magenta\r\n  'rgba(0,40,60,0.5)', // cyan shadow\r\n  'rgba(60,0,40,0.4)'  // dark pink\r\n];\r\n\r\nfunction lerp(a: number, b: number, t: number) {\r\n  return a + (b - a) * t;\r\n}\r\n\r\nconst ChatBubble: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const neonRingRef = useRef<HTMLCanvasElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [pointer, setPointer] = useState<{x: number, y: number} | null>(null);\r\n\r\n  // Animate floating plasma blobs (no pointer attraction)\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    const phases = Array.from({length: PLASMA_BLOBS}, (_, i) => Math.random() * 1000);\r\n    const speeds = Array.from({length: PLASMA_BLOBS}, (_, i) => 0.7 + Math.random() * 0.7);\r\n    const radii = Array.from({length: PLASMA_BLOBS}, (_, i) => 16 + Math.random() * 12);\r\n    const draw = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      for (let i = 0; i < PLASMA_BLOBS; i++) {\r\n        let cx = BUBBLE_SIZE/2 + Math.sin(t * speeds[i] + phases[i]) * 16 + Math.cos(t * 0.7 + i) * 8;\r\n        let cy = BUBBLE_SIZE/2 + Math.cos(t * speeds[i] + phases[i]) * 16 + Math.sin(t * 0.9 + i) * 8;\r\n        // No pointer attraction for inner blobs\r\n        const r = radii[i] + Math.sin(t * 1.2 + i) * 4 + Math.cos(t * 0.7 + i) * 2;\r\n        ctx.save();\r\n        ctx.globalAlpha = 0.7;\r\n        ctx.beginPath();\r\n        for (let a = 0; a <= Math.PI * 2 + 0.1; a += Math.PI/24) {\r\n          const edge = r + Math.sin(a * 3 + t * 1.5 + i) * 3 + Math.cos(a * 2.2 + t * 0.7 + i) * 2;\r\n          const x = cx + Math.cos(a) * edge;\r\n          const y = cy + Math.sin(a) * edge;\r\n          if (a === 0) ctx.moveTo(x, y);\r\n          else ctx.lineTo(x, y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowColor = PLASMA_COLORS[i % PLASMA_COLORS.length];\r\n        ctx.shadowBlur = 16;\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(draw);\r\n    };\r\n    draw();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, []); // <-- no pointer dependency\r\n\r\n  // Neon plasma ring animation (multiple rings, only these respond to pointer)\r\n  useEffect(() => {\r\n    let animationId: number;\r\n    let t = 0;\r\n    const drawRing = () => {\r\n      const canvas = neonRingRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.save();\r\n      ctx.translate(RING_SIZE/2, RING_SIZE/2);\r\n      const baseR = 40;\r\n      let pointerAngle = null;\r\n      let pointerDist = null;\r\n      if (pointer && containerRef.current) {\r\n        const rect = containerRef.current.getBoundingClientRect();\r\n        const px = pointer.x - rect.left - RING_SIZE/2;\r\n        const py = pointer.y - rect.top - RING_SIZE/2;\r\n        pointerDist = Math.sqrt(px*px + py*py);\r\n        pointerAngle = Math.atan2(py, px);\r\n      }\r\n      for (let ring = 0; ring < OUTER_RING_COLORS.length; ring++) {\r\n        ctx.beginPath();\r\n        const phase = t * (1.2 + ring * 0.13) + ring * 1.5;\r\n        for (let a = 0; a <= Math.PI * 2 + 0.01; a += Math.PI/64) {\r\n          let r = baseR + ring * 3 + Math.sin(a * (6 + ring) + phase) * (2 + ring) + Math.cos(a * (3 + ring) + phase * 0.7) * (1.5 + ring * 0.5);\r\n          // Only the outer ring(s) respond to pointer\r\n          if (pointerAngle !== null && pointerDist !== null && pointerDist < 80) {\r\n            const diff = Math.abs(a - pointerAngle);\r\n            if (diff < 0.7) {\r\n              r += (1 - diff/0.7) * (12 + ring * 4 - pointerDist/8) * Math.sin(phase * 1.5);\r\n            }\r\n          }\r\n          const x = Math.cos(a) * r;\r\n          const y = Math.sin(a) * r;\r\n          if (a === 0) ctx.moveTo(x, y);\r\n          else ctx.lineTo(x, y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.shadowColor = OUTER_RING_COLORS[ring];\r\n        ctx.shadowBlur = 12 + ring * 4;\r\n        ctx.strokeStyle = OUTER_RING_COLORS[ring];\r\n        ctx.lineWidth = 2.2 + ring * 0.7;\r\n        ctx.globalAlpha = 0.7 - ring * 0.12;\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n      t += 0.018;\r\n      animationId = requestAnimationFrame(drawRing);\r\n    };\r\n    drawRing();\r\n    return () => cancelAnimationFrame(animationId);\r\n  }, [pointer]);\r\n\r\n  // Mouse move tracking for pointer attraction (only for outer ring)\r\n  useEffect(() => {\r\n    const handleMove = (e: MouseEvent) => {\r\n      setPointer({ x: e.clientX, y: e.clientY });\r\n    };\r\n    const handleLeave = () => setPointer(null);\r\n    window.addEventListener('mousemove', handleMove);\r\n    window.addEventListener('mouseout', handleLeave);\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMove);\r\n      window.removeEventListener('mouseout', handleLeave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"chat-bubble-container\"\r\n      ref={containerRef}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <div className=\"chat-bubble\">\r\n        {/* Neon plasma ring canvas (multiple rings) */}\r\n        <canvas\r\n          ref={neonRingRef}\r\n          width={RING_SIZE}\r\n          height={RING_SIZE}\r\n          className=\"plasma-neon-ring-canvas\"\r\n        />\r\n        {/* CSS-based plasma orb */}\r\n        <div className=\"plasma-orb\">\r\n          <div className=\"plasma-core\"></div>\r\n          <div className=\"plasma-glow\"></div>\r\n          <div className=\"plasma-trail\"></div>\r\n          {/* Canvas for floating plasma blobs */}\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={BUBBLE_SIZE}\r\n            height={BUBBLE_SIZE}\r\n            className=\"plasma-blobs-canvas\"\r\n          />\r\n          {/* On hover, show the GIF covering the orb */}\r\n          {isHovered && (\r\n            <img src={botIcon} alt=\"AI Bot\" className=\"bot-gif-full\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBubble; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}